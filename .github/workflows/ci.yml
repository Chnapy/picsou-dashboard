
name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  test:
    name: Test
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [10.14.2]

    steps:
    - uses: actions/checkout@v2

    - name: Use node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install Firebase
      run: curl -sL https://firebase.tools | bash

    - name: Install frontend dependencies
      run: yarn --frozen-lockfile

    - name: Install functions dependencies
      run: cd fire-functions/functions && yarn --frozen-lockfile

    - name: Test functions
      run: cd fire-functions/functions && yarn test-ci
      env:
        CI: true

    - name: Test frontend
      run: yarn test-ci
      env:
        CI: true

  build:
    name: Build
    runs-on: ubuntu-18.04

    strategy:
      matrix:
        node-version: [10.14.2]

    steps:
    - uses: actions/checkout@v2

    - name: Use node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - uses: actions/cache@v2
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install frontend dependencies
      run: yarn --frozen-lockfile

    - name: Install functions dependencies
      run: cd fire-functions/functions && yarn --frozen-lockfile

    - name: Build frontend
      run: yarn build

    - name: Build functions
      run: cd fire-functions/functions && yarn build
